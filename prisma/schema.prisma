// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id
  leagueIGN         String        @unique @map("league_ign")
  region            Region
  rank              Rank
  main              Role
  secondary         Role
  wins              Int           @default(0)
  losses            Int           @default(0)
  elo               Int           @default(0)
  externalElo       Int           @default(0) @map("external_elo")
  autofillProtected Boolean       @default(false) @map("autofill_protected")
  registeredAt      DateTime      @default(now()) @map("registered_at")
  player            Player[]
  seasonStats       SeasonStats[]
}

enum Side {
  RED
  BLUE
}

model Player {
  user    User   @relation(fields: [userId], references: [id])
  scrim   Scrim  @relation(fields: [scrimId], references: [id], onDelete: Cascade)
  userId  String @map("user_id")
  scrimId Int    @map("scrim_id")
  role    Role
  side    Side

  pregameElo Int     @default(0) @map("pre_game_elo")
  isOffRole  Boolean @default(false) @map("is_off_role")
  isAutoFill Boolean @default(false) @map("is_auto_fill")

  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, scrimId])
}

model Scrim {
  id        Int      @id @default(sequence())
  status    Status   @default(STARTED)
  players   Player[]
  guildID   String
  region    Region
  winner    Side?
  createdAt DateTime @default(now()) @map("created_at")
  Draft     Draft?
  season    Int      @default(0)

  blueTeamName String @map("blue_team_name")
  redTeamName  String @map("red_team_name")
}

model SeasonStats {
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")
  season Int

  wins   Int
  losses Int
  elo    Int

  @@id([userId, season])
}

model Draft {
  scrim       Scrim  @relation(fields: [scrimId], references: [id], onDelete: Cascade)
  scrimId     Int    @unique @map("scrim_id")
  draftRoomId String @map("draft_room_id")

  bluePicks String[] @default([]) @map("blue_picks")
  redPicks  String[] @default([]) @map("red_picks")
  blueBans  String[] @default([]) @map("blue_bans")
  redBans   String[] @default([]) @map("red_bans")

  @@id([scrimId, draftRoomId])
}

enum Status {
  STARTED
  REMAKE
  COMPLETED
}

enum Region {
  EUW
  EUW_HIGH_ELO
  NA
  NA_HIGH_ELO
}

enum Rank {
  IRON
  BRONZE
  SILVER
  GOLD
  PLATINUM
  EMERALD
  DIAMOND
  MASTER
  GRANDMASTER
  CHALLENGER
}

enum Role {
  TOP
  JUNGLE
  MID
  BOT
  SUPPORT
}
